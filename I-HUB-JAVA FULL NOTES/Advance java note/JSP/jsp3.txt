JSP to Database Communication
==============================
Diagram: jsp3.1


Deployment Directory Structure
------------------------------
JspApp5
|
|---Java Resources
|
|---WebContent
	|
	|---form.html
	|---process.jsp
	|
	|---WEB-INF
		|
		|---web.xml 
		|
		|------lib
			|
			|---ojdbc14.jar
Note:
-----
In above application we need to add "servlet-api.jar" and "ojdbc14.jar" file in project build path.

Copy and paste "ojdbc14.jar" file inside "WEB-INF/lib" folder seperately.


student table
=============
drop table student;

create table student(sno number(3),sname varchar2(10), sadd varchar2(12));


form.html
----------

<form action="process.jsp">

	No: <input type="text" name="t1"/> <br>
	
	Name: <input type="text" name="t2"/> <br>
	
	Address: <input type="text" name="t3"/> <br>
	
	<input type="submit" value="submit"/>

</form>


process.jsp
-----------
<%@page  import="java.sql.*" %>
<%
	//reading form data 
	String sno=request.getParameter("t1");
	int no=Integer.parseInt(sno);
	
	String name=request.getParameter("t2");
	String add=request.getParameter("t3");
	
	//insert the data into database
	Connection con=null;
	PreparedStatement ps=null;
	String qry=null;
	int result=0;
	try
	{
		Class.forName("oracle.jdbc.driver.OracleDriver");
		con=DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:XE","system","admin");
		qry="insert into student values(?,?,?)";
		ps=con.prepareStatement(qry);
		
		//set the values
		ps.setInt(1,no);
		ps.setString(2,name);
		ps.setString(3,add);
		
		//execute 
		result=ps.executeUpdate();
		
		if(result==0)
			out.println("No Record Inserted");
		else
			out.println("Record Inserted");
		
		ps.close();
		con.close();
		
	}
	catch(Exception e)
	{
		e.printStackTrace();
	}
%>


web.xml
--------
<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd" id="WebApp_ID" version="3.0">
  
  <welcome-file-list>
  	<welcome-file>form.html</welcome-file>
  </welcome-file-list>
  
</web-app>


Request url
----------
	http://localhost:2525/JspApp5/


Action Tags
============
Action tags are used to perform perticular task.

Action tags are used to control flow of the pages and uses java beans.

Action tags internally uses servlet API functionality.

All action tags are executed dynamically at runtime.

There are two types of action tags. 

1) Standard Action tags 

2) Custom Action tags 


1) Standard Action tags 
-----------------------
Built-in tags are called standard actions.

ex:
	<jsp:forward>
	<jsp:include>
	<jsp:useBean>
	<jsp:setProperty>
	<jsp:getProperty>
	and etc.


Action forward tag 
==================
In action forward tag, the output of source JSP program will be discarded and output of destination JSP program goes to browser window as dynamic response.

It internally uses servlet API functionality called rd.forward(req,res).

syntax:
	<jsp:forward  page="page_name"/>

Deployment Directory Structure
------------------------------
JspApp6
|
|---Java Resources
|
|---WebContent
	|
	|----A.jsp
	|----B.jsp
	|	
	|----WEB-INF
		|
		|---web.xml 
Note:
------
In above application we need to add "servlet-api.jar" file in project build path.
	

A.jsp
-------
<b><i> Begining of A.jsp</i></b>
<br>
<jsp:forward page="B.jsp"/>
<br>
<b><i> Ending of A.jsp </i></b>

B.jsp
-------
<b><i> This is B.jsp file </i></b>

web.xml
-------
<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd" id="WebApp_ID" version="3.0">

	<welcome-file-list>
		<welcome-file>A.jsp</welcome-file>
	</welcome-file-list>  

</web-app>

Request url
----------
	http://localhost:2525/JspApp6/




Action include tag 
==================
In action include tag, the output of source JSP program and output of destination JSP program combinely goes to browser window as dynamic response.

It internally uses servlet API functionality called rd.include(req,res).

syntax:
	<jsp:include  page="page_name"/>



Deployment Directory Structure
------------------------------
JspApp6
|
|---Java Resources
|
|---WebContent
	|
	|----A.jsp
	|----B.jsp
	|	
	|----WEB-INF
		|
		|---web.xml 
Note:
------
In above application we need to add "servlet-api.jar" file in project build path.
	

A.jsp
-------
<b><i> Begining of A.jsp</i></b>
<br>
<jsp:include page="B.jsp"/>
<br>
<b><i> Ending of A.jsp </i></b>

B.jsp
-------
<b><i> This is B.jsp file </i></b>

web.xml
-------
<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd" id="WebApp_ID" version="3.0">

	<welcome-file-list>
		<welcome-file>A.jsp</welcome-file>
	</welcome-file-list>  

</web-app>

Request url
----------
	http://localhost:2525/JspApp6/





JSP to Java Bean Communication
=============================
JSP to java bean communication is possible by using three tags.

1) <jsp:useBean> tag 
--------------------
	It is used to locate and create bean class object.

2) <jsp:setProperty> tag 
-------------------------
	It is used to set the values to bean object and calls setter methods.

3) <jsp:getProperty> tag 
----------------------
	It is used to get the values from bean object and calls getter methods.

Note:
----
	All the above tags are independent tags.

Example1:
----------

Deployment Directory Structure
------------------------------
JspApp7
|
|---Java Resources
	|
	|------src
		|
		|---com.ihub.www
			|
			|---CubeNumber.java
|
|---WebContent
	|
	|---process.jsp
	|
	|---WEB-INF
		|
		|---web.xml 
Note:
----
In above application we need to add "servlet-api.jar" file in project build path.

CubeNumber.java
---------------
package com.ihub.www;

public class CubeNumber 
{
	public int cube(int n)
	{
		return n*n*n;
	}
}


process.jsp
-----------
<jsp:useBean    id="cn"   class="com.ihub.www.CubeNumber"/>

<center>
<h1>
<%=  "Cube of a given number is = "+cn.cube(5) %>
</h1>
</center>

web.xml
--------
<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd" id="WebApp_ID" version="3.0">
  
  <welcome-file-list>
  	<welcome-file>process.jsp</welcome-file>
  </welcome-file-list>
  
</web-app>

Request url
----------
	http://localhost:2525/JspApp7/


Example2:
---------

Deployment Directory Structure
-------------------------------
JspApp8
|
|---Java Resources
	|
	|------src
		|
		|---com.ihub.www
			|
			|---UserBean.java
|
|---WebContent
	|	
	|---form.html 
	|---process.jsp
	|	
	|---WEB-INF
		|
		|---web.xml 
Note:
-----
In above application we need to add "servlet-api.jar" file in project build path.

form.html
----------

<form action="process.jsp">

	UserName: <input type="text" name="username"/> <br>
	
	Password: <input type="password" name="password"/> <br>
	
	Email : <input type="email" name="email"/> <br> 
	
	<input type="submit" value="submit"/>

</form>


UserBean.java
-------------
package com.ihub.www;

public class UserBean 
{
	private String username;
	private String password;
	private String email;
	
	public String getUsername() {
		return username;
	}
	public void setUsername(String username) {
		this.username = username;
	}
	public String getPassword() {
		return password;
	}
	public void setPassword(String password) {
		this.password = password;
	}
	public String getEmail() {
		return email;
	}
	public void setEmail(String email) {
		this.email = email;
	}
}

proces.jsp
---------
<jsp:useBean id="ub" class="com.ihub.www.UserBean"></jsp:useBean>

<jsp:setProperty property="*" name="ub"/>

Records are : <br>

<jsp:getProperty property="username" name="ub"/> <br>

<jsp:getProperty property="password" name="ub"/> <br>

<jsp:getProperty property="email" name="ub"/> <br>


web.xml
------
<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd" id="WebApp_ID" version="3.0">
  
  <welcome-file-list>
  	<welcome-file>form.html</welcome-file>
  </welcome-file-list> 
  
  
</web-app>


Request url
--------
	http://localhost:2525/JspApp8/



































